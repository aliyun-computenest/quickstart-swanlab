networks:
  swanlab-net:
    name: swanlab-net

volumes:
  swanlab-house:
    name: swanlab-house
  fluent-bit:
    name: fluent-bit

x-common: &common
  networks:
    - swanlab-net
  restart: unless-stopped
  logging:
    options:
      max-size: 50m
      max-file: "3"

services:
  # Gateway
  traefik:
    <<: *common
    image: ccr.ccs.tencentyun.com/self-hosted/traefik:v3.0
    container_name: swanlab-traefik
    ports:
      - "8000:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "0.0.0.0:8080/ping"]
      interval: 10s
      timeout: 5s
      retries: 3
  # Databases
  postgres:
    <<: *common
    image: ccr.ccs.tencentyun.com/self-hosted/postgres:16.1
    container_name: swanlab-postgres
    environment:
      TZ: UTC
      POSTGRES_USER: swanlab
      POSTGRES_PASSWORD: swanlab-postgres
      POSTGRES_DB: app
    volumes:
      - ./data/postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    <<: *common
    image: ccr.ccs.tencentyun.com/self-hosted/redis-stack-server:7.2.0-v15
    container_name: swanlab-redis
    volumes:
      - ./data/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
  clickhouse:
    <<: *common
    image: ccr.ccs.tencentyun.com/self-hosted/clickhouse:24.3
    container_name: swanlab-clickhouse
    volumes:
      - ./data/clickhouse:/var/lib/clickhouse/
    environment:
      TZ: UTC
      CLICKHOUSE_USER: swanlab
      CLICKHOUSE_PASSWORD: swanlab-clickhouse
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "0.0.0.0:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 3
  logrotate:
    <<: *common
    image: ccr.ccs.tencentyun.com/self-hosted/logrotate:v1
    container_name: swanlab-logrotate
    volumes:
      - swanlab-house:/data
    environment:
      LOGS_DIRECTORIES: "/data"
      LOGROTATE_COPIES: 25
      LOGROTATE_SIZE: "25M"
      LOGROTATE_CRONSCHEDULE: "*/20 * * * * *"
      LOGROTATE_INTERVAL: daily
    labels:
      - "traefik.enable=false"
  fluent-bit:
    <<: *common
    image: ccr.ccs.tencentyun.com/self-hosted/fluent-bit:3.0
    container_name: swanlab-fluentbit
    command: ["fluent-bit/bin/fluent-bit", "-c", "/conf/fluent-bit.conf"]
    volumes:
      - fluent-bit:/data
      - swanlab-house:/metrics
    environment:
      LOG_PATH: /metrics/*.log
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_USER: swanlab
      CLICKHOUSE_PASS: swanlab-clickhouse
  minio:
    <<: *common
    image: ccr.ccs.tencentyun.com/self-hosted/minio:RELEASE.2025-02-28T09-55-16Z
    container_name: swanlab-minio
    ports:
      - "9000:9000"
    volumes:
      - ./data/minio:/data
    environment:
      MINIO_ROOT_USER: swanlab
      MINIO_ROOT_PASSWORD: swanlab-minio
    labels:
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio1.rule=PathPrefix(`/swanlab-public`)"
      - "traefik.http.routers.minio1.middlewares=minio-host@file"
      - "traefik.http.routers.minio2.rule=PathPrefix(`/swanlab-private`)"
      - "traefik.http.routers.minio2.middlewares=minio-host@file"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 3
  create-buckets:
    image: ccr.ccs.tencentyun.com/self-hosted/minio-mc:RELEASE.2025-04-08T15-39-49Z
    container_name: swanlab-minio-mc
    networks:
      - swanlab-net
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
        mc alias set myminio http://minio:9000 swanlab swanlab-minio
        # private bucket
        mc mb --ignore-existing myminio/swanlab-private
        mc anonymous set private myminio/swanlab-private
        # public bucket
        mc mb --ignore-existing myminio/swanlab-public
        mc anonymous set public myminio/swanlab-public
      "
  # swanlab services
  swanlab-server:
    <<: *common
    image: ccr.ccs.tencentyun.com/self-hosted/swanlab-server:v1.2.1
    container_name: swanlab-server
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://swanlab:swanlab-postgres@postgres:5432/app?schema=public
      - DATABASE_URL_REPLICA=postgresql://swanlab:swanlab-postgres@postgres:5432/app?schema=public
      - REDIS_URL=redis://default@redis:6379
      - SERVER_PREFIX=/api
      - ACCESS_KEY=swanlab
      - SECRET_KEY=swanlab-minio
      - VERSION=1.2.0
    labels:
      - "traefik.http.routers.swanlab-server.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.swanlab-server.middlewares=preprocess@file"
    command: bash -c "npx prisma migrate deploy && node migrate.js && pm2-runtime app.js"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "0.0.0.0:3000/api/"]
      interval: 10s
      timeout: 5s
      retries: 3
  swanlab-house:
    <<: *common
    image: ccr.ccs.tencentyun.com/self-hosted/swanlab-house:v1.2
    container_name: swanlab-house
    depends_on:
      clickhouse:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SH_API_PREFIX=/api/house
      - SH_LOG_PATH=/data/metrics.log
      - SH_DATABASE_URL=tcp://swanlab:swanlab-clickhouse@clickhouse:9000/app
      - SH_SERVER_URL=http://swanlab-server:3000/api
      - SH_MINIO_SECRET_ID=swanlab
      - SH_MINIO_SECRET_KEY=swanlab-minio
      - SH_DISTRIBUTED_ENABLE=true
      - SH_REDIS_URL=redis://default@redis:6379
    labels:
      - "traefik.http.routers.swanlab-house.rule=PathPrefix(`/api/house`) || PathPrefix(`/api/internal`)"
      - "traefik.http.routers.swanlab-house.middlewares=preprocess@file"
    volumes:
      - swanlab-house:/data
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "0.0.0.0:3000/api/house/health"]
      interval: 10s
      timeout: 5s
      retries: 3
  swanlab-cloud:
    <<: *common
    image: ccr.ccs.tencentyun.com/self-hosted/swanlab-cloud:v1.2
    container_name: swanlab-cloud
    depends_on:
      swanlab-server:
        condition: service_healthy
  swanlab-next:
    <<: *common
    image: ccr.ccs.tencentyun.com/self-hosted/swanlab-next:v1.2
    container_name: swanlab-next
    depends_on:
      swanlab-server:
        condition: service_healthy
    environment:
      - NEXT_CLOUD_URL=http://swanlab-cloud:80
    labels:
      - "traefik.http.routers.swanlab-next.rule=PathPrefix(`/`)"
